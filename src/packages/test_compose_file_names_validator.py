from src.packages.compose_file_names_validator import ComposeFileNamesValidator


def test():
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.foo.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.foo.bar.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.@local.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.@local.foo.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.@local.foo.bar.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.foo.@local.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.foo.@local.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.foo.bar.@local.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.@local.foo.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.@local.foo.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.@local.foo.bar.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.foo.@local.foo.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.foo.@local.foo.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.foo.bar.@local.foo.bar.yml")
    assert ComposeFileNamesValidator("local").validate(f"docker-compose.with-separator.yml")
    assert not ComposeFileNamesValidator("local").validate(f"docker-compose.@some-else.yml")

    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.foo.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.foo.bar.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.#deploy.@not-local.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.#deploy.foo.@not-local.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.#deploy.foo.bar.@not-local.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.#deploy.@not-local.foo.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.#deploy.@not-local.foo.bar.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.foo.#deploy.@not-local.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.foo.#deploy.@not-local.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.foo.bar.#deploy.@not-local.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.#deploy.@not-local.foo.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.#deploy.@not-local.foo.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.#deploy.@not-local.foo.bar.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.foo.#deploy.@not-local.foo.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.foo.#deploy.@not-local.foo.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.foo.bar.#deploy.@not-local.foo.bar.yml")
    assert ComposeFileNamesValidator("not-local").validate(f"docker-compose.with-separator.yml")
    assert not ComposeFileNamesValidator("not-local").validate(f"docker-compose.#deploy.@some-else.yml")
